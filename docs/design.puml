
@startuml Abstract Design

state Dataset {
    state "Multi-Layer Image" as data {
        data : metadata and properties
        data : original image
        data : class layers
    }
    state "Categories" as cats {
        cats : json file (*.json)
        cats : key is class name
        cats : value is class id
    }
}

state "File Handler" as handler {
    handler : "load" functionality loads the image
    handler : "save" functionality saves the image
    handler : "is_valid" functionality check the validity of the image

    state "GIMP (*.xcf)"
    state "OpenRaster (*.ora)"
    state "Multi-page Tiff (*.tif)"
    state "H5 (*.h5)"
    state "TORNGATS (*.pkg)" as pkg {
        state "Metrics" as pkg_metrics
        state "Properties" as pkg_properties
        state "Metadata" as pkg_metadata
        state "Layers" as pkg_layers
        state "States" as pkg_states
    }

    state load <<entryPoint>>
    state save <<entryPoint>>
}

data --> load
save -> data
cats --> handler

state "File Converter" as conv {
    conv : source handler to load images
    conv : destination handler to save images
}

Dataset --> conv

@enduml
